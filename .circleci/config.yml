version: 2.1
orbs:
  # orbs contain basic recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@4.7.0
  aws-cli: circleci/aws-cli@2.0.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
  browser-tools: circleci/browser-tools@1.2.3
  cypress: cypress-io/cypress@1.29.0
  # different jobs are called later in the workflows sections
jobs:
  backend-build-test-deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: 'cimg/base:stable'
    steps:
      - node/install
      - checkout
      - eb/setup
      # use Node v14.18.1
      - run:
          name: Swap node versions
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v14
            nvm alias default 14.18.1

            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      # install dependencies for back-end application
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
      # build back-end application
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
      # run back-end tests
      - run:
          name: Back-End Unit and Integration Tests
          command: |
            npm run backend:test
      # deploy back-end application artifacts to Elastic Beanstalk
      - run:
          name: Back-End Deploy
          command: |
            npm run backend:deploy
  frontend-build-test-deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: 'cimg/base:stable'
    steps:
      - node/install
      - checkout
      - aws-cli/setup
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      # use Node v14.18.1
      - run:
          name: Swap node versions
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v14
            nvm alias default 14.18.1

            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      # install dependencies for front-end application
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      # build front-end application
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Check browser installation
          command: |
            google-chrome --version
            chromedriver --version
      # run front-end unit tests
      - run:
          name: Front-End Unit Tests
          command: |
            npm run frontend:test
      # deploy front-end application artifacts to Simple Storage Service
      - run:
          name: Front-End Deploy
          command: |
            npm run frontend:deploy
workflows:
  mystore-build-test-deploy-workflow:
    jobs:
      # backend: build, test, deploy
      - backend-build-test-deploy
      # run Cypress end-to-end tests
      - cypress/install:
          requires:
            - backend-build-test-deploy
      - cypress/run:
          requires:
            - cypress/install
          executor: cypress/base-12-14-0
          working_directory: mystore-project-frontend
          start: npm run start-e2e
          wait-on: 'http://localhost:4200'
          store_artifacts: false
          record: true
          parallel: true
          parallelism: 5
          group: 5 machines
      # frontend: build, test, deploy
      - frontend-build-test-deploy:
          requires:
            - cypress/run
